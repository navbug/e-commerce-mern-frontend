This is a MERN project.

Tech STACK: 
Frontend: ReactJS, TailwindCSS, Redux, Axios
Backend: NodeJS, Express, Multer, MongoDB, Mongoose, Postman(for testing APIs)

FRONTEND flow:
App.jsx: It contains routes to different pages in the application.

HomePage.jsx: It lists all the products and sorting and filtering options

Register.jsx: It registers new user to the application.

AuthPage.jsx: It logins in already registered user and access app functionalities.

ProductDetails: It shows details of a particular product and it's reviews

Cart.jsx: It handles logic and UI for Cart Page.

Shipping.jsx: It takes the shipping details of the address of customer to deliver order.

Checkout.jsx: It handle card payment functionality.

Profile.jsx: It displayes the profile of a user.

Orders.jsx: It displays the history of orders which a user placed till date.

OrderDetails.jsx: It shows the details of an order like items, shipping details and order status.

NotFoundPage.jsx: It is displayed when a user accidently mistypes the route of particular service.

ADMIN PAGES:
Dashboard.jsx: It allows admin to manage customers, products and orders.

AddProduct.jsx: It allows admin to add new product to the product collection in db.

EditProduct.jsx: It allows the privilege to edit product details like updating stock.

ManageCustomers.jsx: It allows admin to manage users like providing different level access.

ManageOrders.jsx: It displays and manage orders like processing orders.

ManageProducts.jsx: It displays all the products list to be managed by the admin like deleting, updating products in db.


BACKEND APIs:

User APIs: It contains apis related to user login and managing users.

/register(post) - It registers a new user to the db.

/login(post) - It logs in already registered user to the app & gives a token for further login.

/getAllUsers(get) - It gets data of all users.

/getUser/:userId(get) - It fetches data of a single user from db.

/deleteUser/:userId(delete) - It deletes a particular user from the db.


Product APIs: It contains apis related to managing products.

/products(get) - It get all products from the db and returns them.

/products/:productId(get) - It fetchs details of a single product;

/addProduct(post) - It adds new product to the database.

/deleteProduct/:productId(delete) - It deletes a product based on productId.

/updateProduct/:productId(put) - It updates a single product.

/updateProductStock/:productId(patch) - It updates stock of a particular product.

/addReview/:productId(patch) - It adds review to a single product in the database.


Payment API: It contains api to create payment.

/payment/create(post) - It initialize the payment process.


Order APIs - It contains apis related to orders placed by users.

/getAllOrders(get) - It gets all orders from all users to be managed by admin.

/getMyOrders/:userId(get) - It fetches all orders of logged in user.

/getOrder/:orderId(get) - It gets order details of a particular order.

/newOrder(post) - It create a new order in the db when user places an order.

/processOrder/:orderId(patch) - It process the order further, it can only be done by an admin.

/deleteOrder/:orderId(delete) - It deletes an order based on order id from the database.


File APIs: It contains apis related to uploading and downloading image files.

/uploadFile(post) - It uploads a image file to the db with validations and error handling.

/files/:filename(get) - It downloads a particular image file based on filename provided.